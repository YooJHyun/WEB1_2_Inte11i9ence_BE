name: Build, Push, and Deploy Docker Image

on:
  workflow_dispatch:  # 수동 트리거 이벤트

jobs:
  build-push-deploy:
    runs-on: ubuntu-24.04
    steps:
      # 1. 저장소 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. application-prod.properties 암호화
      - name: Add secrets into properties
        run: |
          echo "${{ secrets.APPLICATION_PROD }}" | base64 --decode > ./src/main/resources/application-prod.properties

      # 3. Docker 이미지 빌드
      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/spring-ubuntu-app:latest .

      # 4. application-prod.properties 빌드 후 제거하기
      - name: Clean up application-prod.properties
        run: rm ./src/main/resources/application-prod.properties

      # 5. Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 6. Docker 이미지 푸시
      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/spring-ubuntu-app:latest

      # 7. Docker 이미지 Pull 및 배포
      - name: Deploy Docker Container
        run: |
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/spring-ubuntu-app:latest
          sudo docker stop spring-ubuntu-app || true
          sudo docker rm spring-ubuntu-app || true
          sudo docker run --name spring-ubuntu-app -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/spring-ubuntu-app:latest

      # 8. 오래된 이미지 삭제
      - name: Remove Old Images
        run: sudo docker image prune -a -f || true
